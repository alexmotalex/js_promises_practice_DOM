{"mappings":"ACsEA,SAAS,EAAqB,CAAI,EAChC,EAAmB,EAAM,UAC3B,CAMA,SAAS,EAAmB,CAAI,CAAE,CAAI,EACpC,IAAM,EAAU,SAAS,aAAa,CAAC,OAEvC,EAAQ,YAAY,CAAC,UAAW,gBAChC,EAAQ,SAAS,CAAG,EACpB,EAAQ,SAAS,CAAG,EACpB,SAAS,IAAI,CAAC,MAAM,CAAC,EACvB,CAnEA,AAfE,IAAI,QAAQ,SAAC,CAAA,CAAS,CAAtB,EACE,IAAM,EAAkB,WACtB,aAAa,GACb,EAAQ,8BACR,OAAO,mBAAmB,CAAC,QAAS,EACtC,EAEM,EAAY,WAAW,WAC3B,EAAO,AAAI,MAAM,+BACjB,OAAO,mBAAmB,CAAC,QAAS,EACtC,EAAG,KAEH,OAAO,gBAAgB,CAAC,QAAS,EACnC,GAGC,IAAI,CAAC,GACL,KAAK,CAAC,SAAC,CAFV,EAyDE,EAvDmC,EAAI,OAAO,CAuDrB,Q,GA1C3B,AAVE,IAAI,QAAQ,SAAC,CAAb,EACE,IAAM,EAAiB,SAAC,CAAxB,EACE,EAAE,cAAc,GAChB,EAAQ,8BACV,EAEA,SAAS,gBAAgB,CAAC,QAAS,EAAgB,CAAE,KAAM,CAAA,CAAK,GAChE,SAAS,gBAAgB,CAAC,cAAe,EAAgB,CAAE,KAAM,CAAA,CAAK,EACxE,GAEc,IAAI,CAAC,GAmCrB,AAhCE,IAAI,QAAQ,SAAC,CAAb,EAgBW,IAAA,EAAT,WACM,GAAc,IAChB,EAAS,+BACT,IAEJ,EAES,EAAT,WACE,OAAO,mBAAmB,CAAC,QAAS,GACpC,OAAO,mBAAmB,CAAC,cAAe,EAC5C,EAzBI,EAAY,CAAA,EACZ,EAAa,CAAA,EAEX,EAAkB,SAAC,CAAzB,EACE,EAAE,cAAc,GAChB,EAAY,CAAA,EACZ,GACF,EAEM,EAAmB,SAAC,CAA1B,EACE,EAAE,cAAc,GAChB,EAAa,CAAA,EACb,GACF,EAcA,OAAO,gBAAgB,CAAC,QAAS,EAAiB,CAAE,KAAM,CAAA,CAAK,GAC/D,OAAO,gBAAgB,CAAC,cAAe,EAAkB,CAAE,KAAM,CAAA,CAAK,EACxE,GAEa,IAAI,CAAC","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar firstPromise = function() {\n    return new Promise(function(resolve, reject) {\n        var handleLeftClick = function() {\n            clearTimeout(timeoutId);\n            resolve(\"First promise was resolved\");\n            window.removeEventListener(\"click\", handleLeftClick);\n        };\n        var timeoutId = setTimeout(function() {\n            reject(new Error(\"First promise was rejected\"));\n            window.removeEventListener(\"click\", handleLeftClick);\n        }, 3000);\n        window.addEventListener(\"click\", handleLeftClick);\n    });\n};\nfirstPromise().then(createSuccessMessage).catch(function(err) {\n    return createErrorMessage(err.message);\n});\nvar secondPromise = function() {\n    return new Promise(function(resolve) {\n        var handleAnyClick = function(e) {\n            e.preventDefault();\n            resolve(\"Second promise was resolved\");\n        };\n        document.addEventListener(\"click\", handleAnyClick, {\n            once: true\n        });\n        document.addEventListener(\"contextmenu\", handleAnyClick, {\n            once: true\n        });\n    });\n};\nsecondPromise().then(createSuccessMessage);\nvar thirdPromise = function() {\n    return new Promise(function(resolve) {\n        var checkBothClick = function checkBothClick() {\n            if (rightClick && leftClick) {\n                resolve(\"Third promises was resolved\");\n                cleanupListeners();\n            }\n        };\n        var cleanupListeners = function cleanupListeners() {\n            window.removeEventListener(\"click\", handleLeftClick);\n            window.removeEventListener(\"contextmenu\", handleRightClick);\n        };\n        var leftClick = false;\n        var rightClick = false;\n        var handleLeftClick = function(e) {\n            e.preventDefault();\n            leftClick = true;\n            checkBothClick();\n        };\n        var handleRightClick = function(e) {\n            e.preventDefault();\n            rightClick = true;\n            checkBothClick();\n        };\n        window.addEventListener(\"click\", handleLeftClick, {\n            once: true\n        });\n        window.addEventListener(\"contextmenu\", handleRightClick, {\n            once: true\n        });\n    });\n};\nthirdPromise().then(createSuccessMessage);\nfunction createSuccessMessage(text) {\n    createNotification(text, \"success\");\n}\nfunction createErrorMessage(text) {\n    createNotification(text, \"error\");\n}\nfunction createNotification(text, type) {\n    var message = document.createElement(\"div\");\n    message.setAttribute(\"data-qa\", \"notification\");\n    message.className = type;\n    message.innerText = text;\n    document.body.append(message);\n}\n\n//# sourceMappingURL=index.c4416595.js.map\n","'use strict';\n\nconst firstPromise = () =>\n  new Promise((resolve, reject) => {\n    const handleLeftClick = () => {\n      clearTimeout(timeoutId);\n      resolve('First promise was resolved');\n      window.removeEventListener('click', handleLeftClick);\n    };\n\n    const timeoutId = setTimeout(() => {\n      reject(new Error('First promise was rejected'));\n      window.removeEventListener('click', handleLeftClick);\n    }, 3000);\n\n    window.addEventListener('click', handleLeftClick);\n  });\n\nfirstPromise()\n  .then(createSuccessMessage)\n  .catch((err) => createErrorMessage(err.message));\n\nconst secondPromise = () =>\n  new Promise((resolve) => {\n    const handleAnyClick = (e) => {\n      e.preventDefault();\n      resolve('Second promise was resolved');\n    };\n\n    document.addEventListener('click', handleAnyClick, { once: true });\n    document.addEventListener('contextmenu', handleAnyClick, { once: true });\n  });\n\nsecondPromise().then(createSuccessMessage);\n\nconst thirdPromise = () =>\n  new Promise((resolve) => {\n    let leftClick = false;\n    let rightClick = false;\n\n    const handleLeftClick = (e) => {\n      e.preventDefault();\n      leftClick = true;\n      checkBothClick();\n    };\n\n    const handleRightClick = (e) => {\n      e.preventDefault();\n      rightClick = true;\n      checkBothClick();\n    };\n\n    function checkBothClick() {\n      if (rightClick && leftClick) {\n        resolve(`Third promises was resolved`);\n        cleanupListeners();\n      }\n    }\n\n    function cleanupListeners() {\n      window.removeEventListener('click', handleLeftClick);\n      window.removeEventListener('contextmenu', handleRightClick);\n    }\n\n    window.addEventListener('click', handleLeftClick, { once: true });\n    window.addEventListener('contextmenu', handleRightClick, { once: true });\n  });\n\nthirdPromise().then(createSuccessMessage);\n\nfunction createSuccessMessage(text) {\n  createNotification(text, 'success');\n}\n\nfunction createErrorMessage(text) {\n  createNotification(text, 'error');\n}\n\nfunction createNotification(text, type) {\n  const message = document.createElement('div');\n\n  message.setAttribute('data-qa', 'notification');\n  message.className = type;\n  message.innerText = text;\n  document.body.append(message);\n}\n"],"names":["createSuccessMessage","text","createNotification","type","message","document","createElement","setAttribute","className","innerText","body","append","firstPromise","Promise","resolve","reject","handleLeftClick","clearTimeout","timeoutId","window","removeEventListener","setTimeout","Error","addEventListener","then","catch","err","secondPromise","handleAnyClick","e","preventDefault","once","thirdPromise","checkBothClick","rightClick","leftClick","cleanupListeners","handleRightClick"],"version":3,"file":"index.c4416595.js.map"}